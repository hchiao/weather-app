---
apiVersion: v1
kind: Service
metadata:
  name: weather
  namespace: "{{ .Values.namespace }}"
  annotations:
    # https://cloud.google.com/kubernetes-engine/docs/how-to/container-native-load-balancing#using-pod-readiness-feedback
    # https://cloud.google.com/kubernetes-engine/docs/how-to/standalone-neg
    # https://github.com/kubernetes/ingress-gce/issues/1463
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: ClusterIP
  selector:
    app: "weather"
  ports:
    - name: http-80
      protocol: TCP
      port: {{ .Values.loadbalancer_port }}
      targetPort: {{ .Values.container_port }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: basic-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "{{ .Values.static_ip_name }}"
    networking.gke.io/managed-certificates: managed-cert
    kubernetes.io/ingress.class: "gce"
spec:
  defaultBackend:
    service:
      name: weather
      port:
        number: {{ .Values.loadbalancer_port }}
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: managed-cert
spec:
  domains:
    - "{{ .Values.domain }}"
